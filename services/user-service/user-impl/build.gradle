java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacocoTestCoverageVerification {
    enabled = false;
}

dependencies {
    implementation project(':services:user-service:user-api')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.liquibase:liquibase-core'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}


tasks.register('copyMigrations', Copy) {
    from project(':services:user-service:user-db').file('db')
    into "${layout.buildDirectory.dir("resources/test").get()}/db"
}

tasks.named('test') {
    dependsOn copyMigrations
    useJUnitPlatform()
}

configurations.configureEach {
    resolutionStrategy {
        force 'org.apache.commons:commons-text:1.12.0'
    }
}